packages.install('ggplot2')
package.install('ggplot2')
install.packages("ggplot2")
library(ggplot2)
library(rgdal)
library(sf)
library(tidyr)
huc_data <- readOGR("groupings/flowsensitive_current.gpkg", "flowsensitive_current")
huc_data_mapping <- huc_data %>% gather(key=model_run, value=grouping, "KM_6_R50_Std_AM_Euc","KM_5_R50_Std_AM_Euc","KM_8_R50_Std_AM_Euc","KM_10_R50_Std_AM_Euc")
ggplot() +
geom_sf(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
ggplot() +
geom(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
library(sf)
library(maps)
library(ggplot2)
library(rgdal)
library(tidyr)
ggplot() +
geom(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
ggplot() +
geom_sf(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
gplot() +
geom_st(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
ggplot() +
geom_st(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
huc_data <- st_to_sf(readOGR("groupings/flowsensitive_current.gpkg", "flowsensitive_current"))
huc_data <- st_as_sf(readOGR("groupings/flowsensitive_current.gpkg", "flowsensitive_current"))
ggplot() +
geom_sf(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
library(sf)
library(maps)
library(ggplot2)
library(rgdal)
library(tidyr)
huc_data <- st_as_sf(readOGR("groupings/flowsensitive_current.gpkg", "flowsensitive_current"))
huc_data_mapping <- huc_data %>% gather(key=model_run, value=grouping, "KM_6_R50_Std_AM_Euc","KM_5_R50_Std_AM_Euc","KM_8_R50_Std_AM_Euc","KM_10_R50_Std_AM_Euc")
ggplot() +
geom_sf(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
library(sf)
library(maps)
library(ggplot2)
library(rgdal)
library(tidyr)
huc_data <- st_as_sf(readOGR("groupings/flowsensitive_current.gpkg", "flowsensitive_current"))
huc_data_mapping <- huc_data %>% gather(key=model_run, value=grouping, "KM_6_R50_Std_AM_Euc","KM_5_R50_Std_AM_Euc","KM_8_R50_Std_AM_Euc","KM_10_R50_Std_AM_Euc")
ggplot() +
geom_sf(huc_data_mapping, lwd = 5)+
scale_fill_distiller("% of HUC12", palette = "Spectral", direction = -1) +
ggtitle("Distribution of Eflow types with percentage of HUC12") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
library(devtools)
install.packages("devtools")
devtools::install_github("tidyverse/ggplot2") # need latest version of ggplot2 in order to use geom_sf
devtools::install_github("tidyverse/ggplot2") # need latest version of ggplot2 in order to use geom_sf
library(sf)
library(maps)
#library(devtools)
#devtools::install_github("tidyverse/ggplot2") # need latest version of ggplot2 in order to use geom_sf
library(ggplot2)
library(rgdal)
library(tidyr)
group_palette <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')
region_data <- st_as_sf(readOGR("groupings/flowsensitive_current.gpkg", "flowsensitive_current"))
ggplot() +
geom_sf(region_data, lwd = 5, mapping=aes(fill=huc_region_group), color=NA)+
ggtitle("Region Breakout") +
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
# read huc data and immediately convert it into SF data
huc_data <- st_as_sf(readOGR("huc_groupings/centralvalley_flowsensitive.gpkg", "centralvalley"))
# now, we need to convert the attributes we're using for groupings into a single column so that GGPlot can do our mapping for us with facets
huc_data_mapping <- huc_data %>% gather(key=model_run, value=grouping, "centralvalley_KM_2_R50_Std_AM_Euc","centralvalley_KM_3_R50_Std_AM_Euc","centralvalley_KM_4_R50_Std_AM_Euc","centralvalley_KM_5_R50_Std_AM_Euc","centralvalley_KM_6_R50_Std_AM_Euc","centralvalley_KM_7_R50_Std_AM_Euc","centralvalley_KM_8_R50_Std_AM_Euc","centralvalley_KM_9_R50_Std_AM_Euc")
# read huc data and immediately convert it into SF data
huc_data <- st_as_sf(readOGR("huc_groupings/centralvalley_flowsensitive.gpkg", "centralvalley"))
# now, we need to convert the attributes we're using for groupings into a single column so that GGPlot can do our mapping for us with facets
huc_data_mapping <- huc_data %>% gather(key=model_run, value=grouping, "centralvalley_KM2_R50_Std_AM_Euc","centralvalley_KM3_R50_Std_AM_Euc","centralvalley_KM4_R50_Std_AM_Euc","centralvalley_KM5_R50_Std_AM_Euc","centralvalley_KM6_R50_Std_AM_Euc","centralvalley_KM7_R50_Std_AM_Euc","centralvalley_KM8_R50_Std_AM_Euc","centralvalley_KM9_R50_Std_AM_Euc")
ggplot() +
geom_sf(huc_data_mapping, lwd = 5, mapping=aes(fill=grouping), color=NA)+
scale_fill_manual(values=group_palette, limits=c(1,2,3,4,5,6,7,8,9)) +
ggtitle("Central Valley Species Groupings") +
facet_grid("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
View(huc_data_mapping)
ggplot() +
geom_sf(huc_data_mapping, lwd = 5, mapping=aes(fill=grouping), color=NA)+
scale_fill_manual(values=group_palette, limits=c(1,2,3,4,5,6,7,8,9)) +
ggtitle("Central Valley Species Groupings") +
facet_map("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
ggplot() +
geom_sf(huc_data_mapping, lwd = 5, mapping=aes(fill=grouping), color=NA)+
scale_fill_manual(values=group_palette, limits=c(1,2,3,4,5,6,7,8,9)) +
ggtitle("Central Valley Species Groupings") +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
library(sf)
library(maps)
#library(devtools)
#devtools::install_github("tidyverse/ggplot2") # need latest version of ggplot2 in order to use geom_sf
library(ggplot2)
library(rgdal)
library(tidyr)
group_palette <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')
species_maps <-function(groupname, title){
suffix<-"_R50_Std_AM_Euc"
huc_data <- st_as_sf(readOGR(paste("huc_groupings/",groupname,"_flowsensitive.gpkg", sep=""),groupname))
# now, we need to convert the attributes we're using for groupings into a single column so that GGPlot can do our mapping for us with facets
huc_data_mapping <- huc_data %>% gather(key=model_run, value=grouping, paste(groupname,"_KM2",suffix, sep=""),paste(groupname,"_KM3",suffix, sep=""),paste(groupname,"_KM4",suffix, sep=""),paste(groupname,"_KM5",suffix, sep=""),paste(groupname,"_KM6",suffix, sep=""),paste(groupname,"_KM7",suffix, sep=""),paste(groupname,"_KM8",suffix, sep=""),paste(groupname,"_KM9",suffix, sep=""))
plot <- ggplot() +
geom_sf(huc_data_mapping, lwd = 5, mapping=aes(fill=grouping), color=NA)+
scale_fill_manual(values=group_palette, limits=c(1,2,3,4,5,6,7,8,9)) +
ggtitle(paste(title," Species Groupings", sep="")) +
facet_wrap("model_run")+
theme_bw()+
theme(panel.grid.major = element_line(colour = 'transparent'))+
theme(strip.background = element_blank(), # facet theme control
strip.placement = "outside",
axis.line.x = element_line(color="black", size = 1),
axis.line.y = element_line(color="black", size = 1),
plot.title = element_text(hjust = 0.5))
return(plot)
}
species_maps("centralvalley", "Central Valley")
View(huc_data)
View(region_data)
suffix<-"_R50_Std_AM_Euc"
remove_fields <- c("OBJECTID", "hucs_filtered_HUC_8", "hucs_filtered_HUC_10", "hucs_filtered_HUC_12", "hucs_filtered_ACRES", "hucs_filtered_NCONTRB_A", "hucs_filtered_HU_10_GNIS", "hucs_filtered_HU_12_GNIS", "hucs_filtered_HU_10_DS", "hucs_filtered_HU_10_NAME", "hucs_filtered_HU_10_MOD", "hucs_filtered_HU_10_TYPE", "hucs_filtered_HU_12_DS", "hucs_filtered_HU_12_NAME", "hucs_filtered_HU_12_MOD", "hucs_filtered_HU_12_TYPE", "hucs_filtereds_STATES", "hucs_filtered_CVA_NAME", "hucs_filtered_huc_id", "Flow_sensitive_current_OBJECTID", "Flow_sensitive_current_HUC_12", "Shape_Length", "Shape_Area", "huc4","huc_region_group",paste("KM_6",suffix, sep=""),paste("KM_5",suffix, sep=""),paste("KM_8",suffix, sep=""),paste("KM_10",suffix, sep=""),paste("KM_12",suffix, sep=""),paste("KM_14",suffix, sep=""))
data_frame <- region_data
data_of_interest <-data_frame %>% modify_at(remove_fields,~NULL)  # filters to just the current group and removes extra fields
data_of_interest <- select(data_frame, -one_of(remove_fields)) %>% names()  # filters to just the current group and removes extra fields
library(dplyr)
data_of_interest <- select(data_frame, -one_of(remove_fields)) %>% names()  # filters to just the current group and removes extra fields
remove_fields <- c("OBJECTID", "hucs_filtered_HUC_8", "hucs_filtered_HUC_10", "hucs_filtered_HUC_12", "hucs_filtered_ACRES", "hucs_filtered_NCONTRB_A", "hucs_filtered_HU_10_GNIS", "hucs_filtered_HU_12_GNIS", "hucs_filtered_HU_10_DS", "hucs_filtered_HU_10_NAME", "hucs_filtered_HU_10_MOD", "hucs_filtered_HU_10_TYPE", "hucs_filtered_HU_12_DS", "hucs_filtered_HU_12_NAME", "hucs_filtered_HU_12_MOD", "hucs_filtered_HU_12_TYPE", "hucs_filtered_STATES", "hucs_filtered_CVA_NAME", "hucs_filtered_huc_id", "flow_sensitive_current_OBJECTID", "flow_sensitive_current_HUC_12", "Shape_Length", "Shape_Area", "huc4","huc_region_group",paste("KM_6",suffix, sep=""),paste("KM_5",suffix, sep=""),paste("KM_8",suffix, sep=""),paste("KM_10",suffix, sep=""),paste("KM_12",suffix, sep=""),paste("KM_14",suffix, sep=""))
data_of_interest <- select(data_frame, -one_of(remove_fields)) %>% names()  # filters to just the current group and removes extra fields
remove_fields <- c("OBJECTID", "hucs_filtered_HUC_8", "hucs_filtered_HUC_10", "hucs_filtered_HUC_12", "hucs_filtered_ACRES", "hucs_filtered_NCONTRB_A", "hucs_filtered_HU_10_GNIS", "hucs_filtered_HU_12_GNIS", "hucs_filtered_HU_10_DS", "hucs_filtered_HU_10_NAME", "hucs_filtered_HU_10_MOD", "hucs_filtered_HU_10_TYPE", "hucs_filtered_HU_12_DS", "hucs_filtered_HU_12_NAME", "hucs_filtered_HU_12_MOD", "hucs_filtered_HU_12_TYPE", "hucs_filtered_STATES", "hucs_filtered_CVA_NAME", "hucs_filtered_huc_id", "Shape_Length", "Shape_Area", "huc4","huc_region_group",paste("KM_6",suffix, sep=""),paste("KM_5",suffix, sep=""),paste("KM_8",suffix, sep=""),paste("KM_10",suffix, sep=""),paste("KM_12",suffix, sep=""),paste("KM_14",suffix, sep=""))
data_of_interest <- select(data_frame, -one_of(remove_fields)) %>% names()  # filters to just the current group and removes extra fields
data_of_interest <- modify_at(remove_fields, ~NULL)  # filters to just the current group and removes extra fields
data_of_interest <- select(data_frame, -one_of(remove_fields))  # filters to just the current group and removes extra fields
View(data_of_interest)
remove_fields <- c("OBJECTID", "hucs_filtered_HUC_8", "hucs_filtered_HUC_10", "hucs_filtered_HUC_12", "hucs_filtered_ACRES", "hucs_filtered_NCONTRB_A", "hucs_filtered_HU_10_GNIS", "hucs_filtered_HU_12_GNIS", "hucs_filtered_HU_10_DS", "hucs_filtered_HU_10_NAME", "hucs_filtered_HU_10_MOD", "hucs_filtered_HU_10_TYPE", "hucs_filtered_HU_12_DS", "hucs_filtered_HU_12_NAME", "hucs_filtered_HU_12_MOD", "hucs_filtered_HU_12_TYPE", "hucs_filtered_STATES", "hucs_filtered_CVA_NAME", "hucs_filtered_huc_id", "Flow_Sensitive_current_OBJECTID", "Flow_Sensitive_current_HUC_12", "hucs_filtered_META_ID", "geometry", "Shape_Length", "Shape_Area", "huc4","huc_region_group",paste("KM_6",suffix, sep=""),paste("KM_5",suffix, sep=""),paste("KM_8",suffix, sep=""),paste("KM_10",suffix, sep=""),paste("KM_12",suffix, sep=""),paste("KM_14",suffix, sep=""))
data_of_interest <- select(data_frame, -one_of(remove_fields))  # filters to just the current group and removes extra fields
View(data_of_interest)
current_field_names <-names(data_of_interest) # get the current column names
new_field_names <- gsub("Flow_Sensitive_current_", "", current_field_names)  # replace the prefix on the fields
colnames(data_of_interest) <- new_field_names
View(data_of_interest)
for(grouping in groups){
print(paste(grouping, "Groups", sep=" "))
for(group in seq(2,grouping)){ # for each subgroup in this grouping
print(paste("Group", group, sep=" "))
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
summaries <- records_in_group %>% summarise_each(funs(sum))
}
}
groups=c(2,3,4,5,6,7,8,9)
for(grouping in groups){
print(paste(grouping, "Groups", sep=" "))
for(group in seq(2,grouping)){ # for each subgroup in this grouping
print(paste("Group", group, sep=" "))
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
summaries <- records_in_group %>% summarise_each(funs(sum))
}
}
group_name="desert"
for(grouping in groups){
print(paste(grouping, "Groups", sep=" "))
for(group in seq(2,grouping)){ # for each subgroup in this grouping
print(paste("Group", group, sep=" "))
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
summaries <- records_in_group %>% summarise_each(funs(sum))
}
}
for(grouping in groups){
print(paste(grouping, "Groups", sep=" "))
for(group in seq(2,grouping)){ # for each subgroup in this grouping
print(paste("Group", group, sep=" "))
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
gathered_data <- records_in_group %>% gather(key=species, values=presence, names(records_in_group))
found_species <- gathered_data %>% filter(presence==1) %>% distinct(species)
print(found_species)
}
}
for(grouping in groups){
print(paste(grouping, "Groups", sep=" "))
for(group in seq(1,grouping)){ # for each subgroup in this grouping
print(paste("Group", group, sep=" "))
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
gathered_data <- records_in_group %>% gather(key=species, values=presence, names(records_in_group))
found_species <- gathered_data %>% filter(presence==1) %>% distinct(species)
print(found_species)
}
}
grouping <- 2
group <- 1
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
gathered_data <- records_in_group %>% gather(key=species, values=presence, names(records_in_group))
gathered_data <- records_in_group %>% gather(key=species, value=presence, names(records_in_group))
gathered_data <- records_in_group %>% gather(key=species, value=presence, names(records_in_group))
found_species <- gathered_data %>% filter(presence==1) %>% distinct(species)
View(data_of_interest)
class(data_of_interest)
st_geometry(data_of_interest) <- NULL
View(data_of_interest)
gathered_data <- records_in_group %>% gather(key=species, value=presence, names(records_in_group))
st_geometry(records_in_group) <- NULL
gathered_data <- records_in_group %>% gather(key=species, value=presence, names(records_in_group))
found_species <- gathered_data %>% filter(presence==1) %>% distinct(species)
print(found_species)
found_species
gathered_data
gathered_data <- records_in_group %>% gather(key=species, value=presence)
huc_data <- st_as_sf(readOGR(paste("huc_groupings/desert_flowsensitive.gpkg", sep=""),"desert""))
# now, we need to convert the attributes we're using for groupings into a single column so that GGPlot can do our mapping for us with facets
grouping <- 2
group <- 1
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
huc_data <- st_as_sf(readOGR(paste("huc_groupings/desert_flowsensitive.gpkg", sep=""),"desert"))
data_frame <- huc_data
suffix<-"_R50_Std_AM_Euc"
remove_fields <- c("OBJECTID", "hucs_filtered_HUC_8", "hucs_filtered_HUC_10", "hucs_filtered_HUC_12", "hucs_filtered_ACRES", "hucs_filtered_NCONTRB_A", "hucs_filtered_HU_10_GNIS", "hucs_filtered_HU_12_GNIS", "hucs_filtered_HU_10_DS", "hucs_filtered_HU_10_NAME", "hucs_filtered_HU_10_MOD", "hucs_filtered_HU_10_TYPE", "hucs_filtered_HU_12_DS", "hucs_filtered_HU_12_NAME", "hucs_filtered_HU_12_MOD", "hucs_filtered_HU_12_TYPE", "hucs_filtered_STATES", "hucs_filtered_CVA_NAME", "hucs_filtered_huc_id", "Flow_Sensitive_current_OBJECTID", "Flow_Sensitive_current_HUC_12", "hucs_filtered_META_ID", "geometry", "Shape_Length", "Shape_Area", "huc4","huc_region_group",paste("KM_6",suffix, sep=""),paste("KM_5",suffix, sep=""),paste("KM_8",suffix, sep=""),paste("KM_10",suffix, sep=""),paste("KM_12",suffix, sep=""),paste("KM_14",suffix, sep=""))
data_of_interest <- select(data_frame, -one_of(remove_fields))  # filters to just the current group and removes extra fields
View(data_of_interest)
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
View(records_in_group)
data_of_interest <- select(data_frame, -one_of(remove_fields))  # filters to just the current group and removes extra fields
current_field_names <-names(data_of_interest) # get the current column names
new_field_names <- gsub("Flow_Sensitive_current_", "", current_field_names)  # replace the prefix on the fields
colnames(data_of_interest) <- new_field_names
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
View(data_of_interest)
paste(group_name,"_KM",grouping,suffix, sep="")
records_in_group <- data_of_interest %>% filter("desert_KM2_R50_Std_AM_Euc" == group)  # filters to just the current group
)  #
records_in_group <- data_of_interest %>% filter("desert_KM2_R50_Std_AM_Euc" == 1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == "1")  # filters to just the current group
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == 1")  # filters to just the current group
records_in_group <- records_in_group[, -grep(".+KM.+", colnames(records_in_group))]  # drop columns for groupings
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == "1")  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.integer(paste(group_name,"_KM",grouping,suffix, sep="")) == 1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.numeric(paste(group_name,"_KM",grouping,suffix, sep="")) == 1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.numeric(paste(group_name,"_KM",grouping,suffix, sep="")) == 1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.numeric(paste(group_name,"_KM",grouping,suffix, sep="")) == 1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.numeric(as.character(paste(group_name,"_KM",grouping,suffix, sep=""))) == 1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.numeric(as.character(paste(group_name,"_KM",grouping,suffix, sep=""))) == 1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == "1")  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == "1")  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == "2")  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == as.character(group))  # filters to just the current group
records_in_group <- records_in_group[, -grep(".+KM.+", colnames(records_in_group))]  # drop columns for groupings
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == as.character(group))  # filters to just the current group
data_of_interest[paste(group_name,"_KM",grouping,suffix, sep="")]
st_geometry(data_of_interest) <- NULL  # drop the SF geometry fields so we can work with it as a normal data frame
data_of_interest[paste(group_name,"_KM",grouping,suffix, sep="")]
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == as.character(group))  # filters to just the current group
data_of_interest <- select(data_frame, -one_of(remove_fields))  # filters to just the current group and removes extra fields
current_field_names <-names(data_of_interest) # get the current column names
new_field_names <- gsub("Flow_Sensitive_current_", "", current_field_names)  # replace the prefix on the fields
colnames(data_of_interest) <- new_field_names
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == as.character(group))  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.integer(paste(group_name,"_KM",grouping,suffix, sep="")) == group)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == as.character(group))  # filters to just the current group
data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == as.character(group))
st_geometry(data_frame) <- NULL  # drop the SF geometry fields so we can work with it as a normal data frame
suffix<-"_R50_Std_AM_Euc"
remove_fields <- c("OBJECTID", "hucs_filtered_HUC_8", "hucs_filtered_HUC_10", "hucs_filtered_HUC_12", "hucs_filtered_ACRES", "hucs_filtered_NCONTRB_A", "hucs_filtered_HU_10_GNIS", "hucs_filtered_HU_12_GNIS", "hucs_filtered_HU_10_DS", "hucs_filtered_HU_10_NAME", "hucs_filtered_HU_10_MOD", "hucs_filtered_HU_10_TYPE", "hucs_filtered_HU_12_DS", "hucs_filtered_HU_12_NAME", "hucs_filtered_HU_12_MOD", "hucs_filtered_HU_12_TYPE", "hucs_filtered_STATES", "hucs_filtered_CVA_NAME", "hucs_filtered_huc_id", "Flow_Sensitive_current_OBJECTID", "Flow_Sensitive_current_HUC_12", "hucs_filtered_META_ID", "geometry", "Shape_Length", "Shape_Area", "huc4","huc_region_group",paste("KM_6",suffix, sep=""),paste("KM_5",suffix, sep=""),paste("KM_8",suffix, sep=""),paste("KM_10",suffix, sep=""),paste("KM_12",suffix, sep=""),paste("KM_14",suffix, sep=""))
data_of_interest <- select(data_frame, -one_of(remove_fields))  # filters to just the current group and removes extra fields
current_field_names <-names(data_of_interest) # get the current column names
colnames(data_of_interest) <- new_field_names
current_field_names <-names(data_of_interest) # get the current column names
new_field_names <- gsub("Flow_Sensitive_current_", "", current_field_names)  # replace the prefix on the fields
colnames(data_of_interest) <- new_field_names
records_in_group <- data_of_interest %>% filter(as.character(paste(group_name,"_KM",grouping,suffix, sep="")) == as.character(group))  # filters to just the current group
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") ==group+1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") ==group)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") ==as.character(group))  # filters to just the current group
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") ==1)  # filters to just the current group
records_in_group <- data_of_interest %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") ==as.character(1))  # filters to just the current group
records_in_group <- data_of_interest %>% dplyr::filter(paste(group_name,"_KM",grouping,suffix, sep="") ==as.character(1))  # filters to just the current group
records_in_group <- data_of_interest %>% dplyr::filter(paste(group_name,"_KM",grouping,suffix, sep="") ==as.character(1))  # filters to just the current group
records_in_group <- as.data.frame(data_of_interest) %>% dplyr::filter(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(1))  # filters to just the current group
records_in_group <- as.data.frame(data_of_interest) %>% dplyr::filter(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))  # filters to just the current group
records_in_group2 <- records_in_group[, -grep(".+KM.+", colnames(records_in_group))]  # drop columns for groupings
records_in_group2 <- as.data.frame(data_of_interest) %>% dplyr::filter(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))  # filters to just the current group
View(data_of_interest)
class(data_frame)
class(data_of_interest)
class(huc_data)
records_in_group <- as.data.frame(data_of_interest) %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))  # filters to just the current group
library(sf)
library(maps)
library(ggplot2)
library(rgdal)
library(tidyr)
library(dplyr)
records_in_group <- as.data.frame(data_of_interest) %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))  # filters to just the current group
records_in_group <- as.data.frame(data_of_interest) %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
records_in_group <- huc_data %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
records_in_group <- huc_data %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == group)  # filters to just the current group
records_in_group <- huc_data %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))
records_in_group <- as.data.frame(huc_data) %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))
records_in_group <- as.data.frame(huc_data) %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))
records_in_group <- as.data.frame(huc_data) %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))
records_in_group <- as.data.frame(huc_data) %>% filter(paste(group_name,"_KM",grouping,suffix, sep="") == group)
records_in_group <- as.data.frame(huc_data) %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") == group)
records_in_group <- as.data.frame(huc_data) %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") = as.character(group))
records_in_group <- huc_data %>% filter.sf(paste(group_name,"_KM",grouping,suffix, sep="") = as.character(group))
records_in_group <- as.data.frame(data_of_interest) %>% dplyr::filter(paste(group_name,"_KM",grouping,suffix, sep="") == as.factor(group))  # filters to just the current group
huc_data <- st_as_sf(readOGR(paste("huc_groupings/desert_flowsensitive.gpkg", sep=""),"desert", stringsAsFactors=FALSE))
View(huc_data)
data_frame = huc_data
st_geometry(data_frame) <- NULL  # drop the SF geometry fields so we can work with it as a normal data frame
suffix<-"_R50_Std_AM_Euc"
remove_fields <- c("OBJECTID", "hucs_filtered_HUC_8", "hucs_filtered_HUC_10", "hucs_filtered_HUC_12", "hucs_filtered_ACRES", "hucs_filtered_NCONTRB_A", "hucs_filtered_HU_10_GNIS", "hucs_filtered_HU_12_GNIS", "hucs_filtered_HU_10_DS", "hucs_filtered_HU_10_NAME", "hucs_filtered_HU_10_MOD", "hucs_filtered_HU_10_TYPE", "hucs_filtered_HU_12_DS", "hucs_filtered_HU_12_NAME", "hucs_filtered_HU_12_MOD", "hucs_filtered_HU_12_TYPE", "hucs_filtered_STATES", "hucs_filtered_CVA_NAME", "hucs_filtered_huc_id", "Flow_Sensitive_current_OBJECTID", "Flow_Sensitive_current_HUC_12", "hucs_filtered_META_ID", "Shape_Length", "Shape_Area", "huc4","huc_region_group",paste("KM_6",suffix, sep=""),paste("KM_5",suffix, sep=""),paste("KM_8",suffix, sep=""),paste("KM_10",suffix, sep=""),paste("KM_12",suffix, sep=""),paste("KM_14",suffix, sep=""))
data_of_interest <- select(data_frame, -one_of(remove_fields))  # filters to just the current group and removes extra fields
current_field_names <-names(data_of_interest) # get the current column names
new_field_names <- gsub("Flow_Sensitive_current_", "", current_field_names)  # replace the prefix on the fields
colnames(data_of_interest) <- new_field_names
records_in_group <- as.data.frame(data_of_interest) %>% dplyr::filter(paste(group_name,"_KM",grouping,suffix, sep="") == as.character(group))  # filters to just the current group
as.character(group)
records_in_group <- as.data.frame(data_of_interest) %>% dplyr::filter("desert_KM2_R50_Std_AM_Euc" == as.character(group))  # filters to just the current group
records_in_group <- data_of_interest %>% dplyr::filter("desert_KM2_R50_Std_AM_Euc" == group)  # filters to just the current group
records_in_group <- data_of_interest %>% dplyr::filter("desert_KM2_R50_Std_AM_Euc" == ``)  # filters to just the current group
records_in_group <- data_of_interest %>% dplyr::filter("desert_KM2_R50_Std_AM_Euc" == 1)
records_in_group <- data_of_interest %>% dplyr::filter("desert_KM2_R50_Std_AM_Euc" == 1)
records_in_group <- data_of_interest %>% dplyr::filter("desert_KM2_R50_Std_AM_Euc" == "1")
records_in_group <- data_of_interest %>% dplyr::filter("desert_KM2_R50_Std_AM_Euc" == as.character(1))
data_of_interest
